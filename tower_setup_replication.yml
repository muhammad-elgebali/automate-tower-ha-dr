---
- name: set facts for pgsql-replication role and preflight check
  hosts: database*  
  vars_files: tower_vars.yml
  tasks:
  - name: determine if db failover is managed by toolkit
    when: not tower_db_external
    block:
      # OUTPUT tower_replication_master_address, tower_replication_replica_address_list
      - name: perform tower replication pre-flight checks
        include_role:
          name: tower_replication_preflight  
    # end block

- name: Configure PostgreSQL on replicas
  hosts: database_replica
  become: true
  vars_files: tower_vars.yml
  tasks:
  - name: determine if db failover is managed by toolkit
    when: not tower_db_external
    block:
      - name: Install postgres database the Tower way
        include_role:
          name: tower_postgres_base
        when: not (pgsqlrep_install_skip | default(False) | bool)
    #end block

- name: Configure PSQL master server
  hosts: database[0]
  become: true
  vars_files: tower_vars.yml
  roles:
    - role: "{{tower_installer_current}}/roles/postgres"
      postgres_exec_vars_only: true

    - role: samdoran.pgsql-replication
      pgsqlrep_role: master
      pgsqlrep_data_path: "{{ pg_conf_dir }}"
      pgsqlrep_service: "{{ postgres_init_name }}"
      # pgsqlrep_master_address: "{{ tower_replication_master_address }}"
      # pgsqlrep_replica_address: "{{ tower_replication_replica_address_list }}"
      pgsqlrep_bash: "{{ pg_bash | default('') }}"
      when: not tower_db_external

- name: Configure PSQL replica
  hosts: database_replica
  become: true
  vars_files: tower_vars.yml
  roles:
    - role: "{{tower_installer_current}}/roles/postgres"
      postgres_exec_vars_only: true

    - role: samdoran.pgsql-replication
      pgsqlrep_role: replica
      pgsqlrep_data_path: "{{ pg_conf_dir }}"
      pgsqlrep_service: "{{ postgres_init_name }}"
      # pgsqlrep_master_address: "{{ tower_replication_master_address }}"
      # pgsqlrep_replica_address: "{{ tower_replication_replica_address_list }}"
      pgsqlrep_bash: "{{ pg_bash | default('') }}"
      when: not tower_db_external
...